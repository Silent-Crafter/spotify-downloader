#!/usr/bin/python3
from spotipy import Spotify
from spotipy.oauth2 import SpotifyClientCredentials
from os import path
from re import findall
from sys import argv

from functions import *

auth_manager = SpotifyClientCredentials(client_id='276dee1768a642e0ae15f34fc7fe6251',
                                        client_secret='f234a63aa0654f2b8304efe46275d6b1')
sp = Spotify(auth_manager=auth_manager)

if (len(argv) > 1):
    url = argv[1]
else:
    url = input('URL: ')

folder = input('Path: ')
mode = input('Select method (n/T/a): ')

maxRetry = 3

failed = []

if 'open.spotify.com/playlist' in url:
    results = sp.playlist_items(playlist_id=url)

    urls = []

    tracks = results['items']

    while results['next']:
        results = sp.next(results)
        tracks.extend(results['items'])

    for track in tracks:
        try:
            song = sp.track(track['track']['id'])
        except TypeError:
            continue
        title = create_title(song)
        if not path.isfile(f'{folder}/{title}.mp3'):
            print('\n-----------------------------------------------------------------------------------------------')
            print('\t\t\t\tSong:', song['name'])
            print('-----------------------------------------------------------------------------------------------\n')
            while True:
                try:
                    link = search(song, mode.strip())
                    download(folder, title, link)
                    set_meta(sp, song, title, folder)

                except (KeyboardInterrupt, SystemExit):
                    exit()

                except Exception as e:
                    if maxRetry < 1:
                        print('Retry limit reached. Breaking out of loop....')
                        failed.append(song['name']+': '+song['external_urls']['spotify'])
                        break
                    else:
                        print(e)
                        maxRetry -= 1
                        continue
                break
            print('\n-----------------------------------------------------------------------------------------------')
        else:
            print(f'{title} Already Downloaded')

    print('songs downloaded')
    if failed:
        print('failed = [')
        for failure in failed:
            print('\t'+failure+'\n')
        print(']')

elif 'open.spotify.com/track' in url:
    song = sp.track(url)
    title = create_title(song)

    if not path.isfile(f'{folder}/{title}.mp3'):
        print('\n-----------------------------------------------------------------------------------------------')
        print('\t\t\t\tSong:', song['name'])
        print('-----------------------------------------------------------------------------------------------\n')
        try:
            link = search(song, mode.strip())
            download(folder, title, link)
            set_meta(sp, song, title, folder)

        except (KeyboardInterrupt, SystemExit):
            exit()

        except:
            print('FAILED')
        print('\n-----------------------------------------------------------------------------------------------')
    else:
        print(f'{title} Already Downloaded')

elif 'open.spotify.com/artist' in url:

    artist_id = 'spotify:artist:'+findall(r'artist/([A-Z,a-z,0-9]*)',url)[0]

    artist_albums = sp.artist_albums(artist_id=artist_id,album_type='single,album,appears_on')
    albums = artist_albums['items']

    while artist_albums['next']:
        artist_albums = sp.next(artist_albums)
        albums.extend(artist_albums['items'])

    for artist_album in albums:
        print('\n\n-----------------------------------------------------------------------------------------------')
        print('\t\t\t\tAlbum:', artist_album['name'])
        print('-----------------------------------------------------------------------------------------------\n')

        album = sp.album_tracks(artist_album['uri'])

        tracks = album['items']

        while album['next']:
            album = sp.next(album)
            tracks.extend(album['items'])

        for track in tracks:
            song = sp.track(track['id'])
            # this is beacuse we dont want to download all the songs of an album of which oly one or two are of artists
            artist_match = False
            for artist in song['artists']:
                if artist['uri'] == artist_id:
                    artist_match = True
                    break

            if artist_match:
                title = create_title(song)
                if not path.isfile(f'{folder}/{title}.mp3'):
                    print('\n-----------------------------------------------------------------------------------------------')
                    print('\t\t\t\tSong:', song['name'])
                    print('-----------------------------------------------------------------------------------------------\n')
                    while True:
                        try:
                            link = search(song, mode.strip())
                            download(folder, title, link)
                            set_meta(sp, song, title, folder)

                        except (KeyboardInterrupt, SystemExit):
                            exit()

                        except Exception as e:
                            if maxRetry < 1:
                                print('Retry limit reached. Breaking out of loop....')
                                failed.append(song['name']+': '+song['external_urls']['spotify'])
                                break
                            else:
                                print(e)
                                maxRetry -= 1
                                continue
                        break
                    print('\n-----------------------------------------------------------------------------------------------')
                else:
                    print(f'{title} Already Downloaded')

    print('songs downloaded')
    if failed:
        print('failed = [')
        for failure in failed:
            print('\t'+failure+'\n')
        print(']')


elif 'open.spotify.com/album' in url:
    album = sp.album_tracks(url)

    tracks = album['items']

    while album['next']:
        album = sp.next(album)
        tracks.extend(album['items'])

    for track in tracks:
        song = sp.track(track['id'])
        title = create_title(song)
        if not path.isfile(f'{folder}/{title}.mp3'):
            print('\n-----------------------------------------------------------------------------------------------')
            print('\t\t\t\tSong:', song['name'])
            print('-----------------------------------------------------------------------------------------------\n')
            while True:
                try:
                    link = search(song, mode.strip())
                    download(folder, title, link)
                    set_meta(sp, song, title, folder)

                except (KeyboardInterrupt, SystemExit):
                    exit()

                except Exception as e:
                    if maxRetry < 1:
                        print('Retry limit reached. Breaking out of loop....')
                        failed.append(song['name']+': '+song['external_urls']['spotify'])
                        break
                    else:
                        print(e)
                        maxRetry -= 1
                        continue
                break
            print('\n-----------------------------------------------------------------------------------------------')
        else:
            print(f'{title} Already Downloaded')

    print('songs downloaded')
    if failed:
        print('failed = [')
        for failure in failed:
            print('\t'+failure+'\n')
        print(']')

else:
    print('Given url is not of a song or playlist on spotify')
